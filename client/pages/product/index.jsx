import React, { useState, useEffect } from "react";
import Head from "next/head";
import axios from "axios";
import Cookies from "js-cookie";
import toastr from "toastr";

import User from "../../layouts/User";
import Link from "next/link";
import BannerProduct from "../../containers/BannerProduct";
import restConnector from "../../axios/configAxios";
import { CartState } from "../../context/Context";

const Product = () => {
  const [token] = useState(Cookies.get("token"));
  const [category, setCategory] = useState([]);
  const [product, setProduct] = useState([]);

  const {
    state: { cart },
    dispatch,
  } = CartState();
  useEffect(() => {
    getCategory();
    getProduct();
  }, []);
  const getProduct = async () => {
    try {
      
      const res = await restConnector.get("/product/list");
      
      const product = res.data.data;
      setProduct(product);
    } catch (error) {
      toastr.error("Lấy thông tin trái cây thất bại!");
    }
  };
  const getCategory = async () => {
    try {
     
      const res = await restConnector.get("/category/list");
  
      const category = res.data.data;
      setCategory(category);
    } catch (error) {
      toastr.error("Lấy thông tin loại trái cây thất bại!");
    }
  };

  const setFilterProduct = async (id) => {
  

    try {
  
      const res = await restConnector.get("/product/list-by-category/" + id);
 
      const product = res.data.data;
      setProduct(product);
    } catch (error) {
      toastr.error("Lấy thông tin loại trái cây thất bại!");
    }
  };

  const viewCategory = (id) => {
    const categoryFind = category.find((x) => x.id == id);
    if (categoryFind) {
      return categoryFind.name;
    }
  };

  const addToCart = (data) => {
    if (data.amount < 1) {
      toastr.warning("Không đủ sản phẩm trong kho!");
    } else {
      dispatch({
        type: "ADD_TO_CART",
        payload: { id: data.id, amount: 1 },
      });
      toastr.success("Đã thêm sản phẩm vào giỏ hàng")
    }
  };

  return (
    <>
      <Head>
        <title>Cửa hàng trái cây</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BannerProduct />
      <div className="container my-5">
        <div className="row">
          <div className="col-9">
            {product.length > 0 ? (
              <div className="row">
                {product.length > 0 &&
                  product.map((data, index) => (
                    <div key={index} className="col-4 mb-4">
                      <div id="card-pr" className="card h-100">
                        <div className="w-100" style={{ height: "300px" }}>
                          <img
                            src={data.image}
                            className="card-img-top"
                            alt="..."
                            style={{ height: "100%" }}
                          />
                        </div>

                        <div className="card-body text-center">
                          <span className="card-text text-secondary fw-light">
                            {viewCategory(data.id_category)}
                          </span>
                          <p className="card-text fw-bolder fs-4">
                            {data.name}
                          </p>
                          <Link href={`/product-detail?id=${data.id}`}>
                            <a href="#">Xem chi tiết</a>
                          </Link>
                          <div
                            id="add-cart"
                            href="#"
                            className="p-3 bg-warning position-absolute top-50 start-50 d-flex align-items-center"
                            onClick={() => addToCart(data)}
                          >
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              className="icon icon-tabler icon-tabler-shopping-cart me-2"
                              width={40}
                              height={40}
                              viewBox="0 0 24 24"
                              strokeWidth="1.5"
                              stroke="#2c3e50"
                              fill="none"
                              strokeLinecap="round"
                              strokeLinejoin="round"
                            >
                              <path
                                stroke="none"
                                d="M0 0h24v24H0z"
                                fill="none"
                              />
                              <circle cx={6} cy={19} r={2} />
                              <circle cx={17} cy={19} r={2} />
                              <path d="M17 17h-11v-14h-2" />
                              <path d="M6 5l14 1l-1 7h-13" />
                            </svg>
                            Thêm vào giỏ hàng
                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
              </div>
            ) : (
              <div className="text-success">
                Đang lấy thông tin danh sách sản phẩm xin đợi trong giây lát....
              </div>
            )}
          </div>
          <div className="col-3">
            <div className="input-group mb-3">
              <input
                id="ip-search"
                type="text"
                className="form-control"
                placeholder="Nhập loại hoa quả cần tìm"
                aria-label="Recipient's username"
                aria-describedby="button-addon2"
              />
              <button
                className="btn btn-success"
                type="button"
                id="button-addon2"
                style={{ borderColor: "#157347" }}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="icon icon-tabler icon-tabler-search"
                  width={24}
                  height={24}
                  viewBox="0 0 24 24"
                  strokeWidth="1.5"
                  stroke="#ffffff"
                  fill="none"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                >
                  <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                  <circle cx={10} cy={10} r={7} />
                  <line x1={21} y1={21} x2={15} y2={15} />
                </svg>
              </button>
            </div>
            <div className="fs-4">Danh mục trái cây</div>
            <ul style={{ listStyle: "none" }}>
              <li
                className="py-3"
                onClick={() => getProduct()}
                style={{ cursor: "pointer" }}
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="icon icon-tabler icon-tabler-arrow-bar-left me-2"
                  width={24}
                  height={24}
                  viewBox="0 0 24 24"
                  strokeWidth="1.5"
                  stroke="#000000"
                  fill="none"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                >
                  <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                  <line x1={4} y1={12} x2={14} y2={12} />
                  <line x1={4} y1={12} x2={8} y2={16} />
                  <line x1={4} y1={12} x2={8} y2={8} />
                  <line x1={20} y1={4} x2={20} y2={20} />
                </svg>
                Tất cả
              </li>
              {category.length > 0 &&
                category.map((data, index) => (
                  <li
                    key={index}
                    className="py-3"
                    onClick={() => setFilterProduct(data.id)}
                    style={{ cursor: "pointer" }}
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      className="icon icon-tabler icon-tabler-arrow-bar-left me-2"
                      width={24}
                      height={24}
                      viewBox="0 0 24 24"
                      strokeWidth="1.5"
                      stroke="#000000"
                      fill="none"
                      strokeLinecap="round"
                      strokeLinejoin="round"
                    >
                      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                      <line x1={4} y1={12} x2={14} y2={12} />
                      <line x1={4} y1={12} x2={8} y2={16} />
                      <line x1={4} y1={12} x2={8} y2={8} />
                      <line x1={20} y1={4} x2={20} y2={20} />
                    </svg>
                    {data.name}
                  </li>
                ))}
            </ul>
          </div>
        </div>
      </div>
    </>
  );
};

Product.getLayout = function getLayout(page) {
  return <User>{page}</User>;
};

export default Product;
